generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserAccount {
  id          String       @id @default(cuid())
  email       String       @unique
  password    String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  userProfile UserProfile?
}

model ContactInfo {
  id            String         @id @default(cuid())
  contactMethod ContactMethods
  contactValue  String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  userProfileId String?
  userProfile   UserProfile?   @relation(fields: [userProfileId], references: [id])
}

model Skills {
  id            String          @id @default(cuid())
  skillName     String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  skillCategory SkillCategory[] @relation("SkillCategoryToSkills")
  userProfile   UserProfile[]   @relation("SkillsToUserProfile")
}

model SkillCategory {
  id           String   @id @default(cuid())
  categoryName String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  skills       Skills[] @relation("SkillCategoryToSkills")
}

model UserProfile {
  id              String        @id @default(cuid())
  userId          String        @unique
  firstName       String
  lastName        String
  city            String?
  state           String?
  country         String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  userEmail       String        @unique
  userContactInfo ContactInfo[]
  userAccount     UserAccount   @relation(fields: [userEmail], references: [email])
  skills          Skills[]      @relation("SkillsToUserProfile")
}

enum ContactMethods {
  EMAIL
  PHONE
  SMS
  FACETIME
  SKYPE
  ZOOM
  GOOGLE_MEET
  WHATSAPP
}
